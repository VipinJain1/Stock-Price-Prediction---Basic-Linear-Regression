import numpy as np
import matplotlib.pyplot as plt
from matplotlib import style
from sklearn.linear_model import LinearRegression
import quandl
import datetime

style.use('seaborn-dark-palette')
 
#Dates
start_date = datetime.date(2016,1,3)
end_date = datetime.date.today()
 
quandl.ApiConfig.api_key = "czKW8kYSFw51vho4F6ns"
 
#Get PD Data (data frame)  From Quandl
df = quandl.get('WIKI/GOOGL', start_date=start_date, end_date=end_date, collapse="daily")
df = df.reset_index()
prices = df['Close'].tolist()
dates = df.index.tolist()
 
#Convert to 1 dimentional  Vector
dates = np.reshape(dates, (len(dates), 1))
prices = np.reshape(prices, (len(prices), 1))

# linear regresion for simple feature.
regressor = LinearRegression()
regressor.fit(dates, prices)
 
#Visualize Resultsc on screen
plt.scatter(dates, prices, color='yellow', label= 'Actual Price') #plotting the initial datapoints
plt.plot(dates, regressor.predict(dates), color='red', linewidth=3, label = 'Predicted Price') #plotting the line made by linear regression
plt.title('Linear Regression for Google | Time vs. Price')
plt.legend()
plt.xlabel('Date Integer')
plt.show()
 
#Predict Price on Given Date
date = [[23]]
predicted_price =regressor.predict(date)
print(predicted_price[0][0],regressor.coef_[0][0] ,regressor.intercept_[0])
